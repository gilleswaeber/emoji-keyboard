:root {
	--s-gap: 4px;
	--xs-gap: 2px;
	--c-shadow: #000;
	--f-fallback: 'Cambria Math', Tahoma, Geneva, Verdana, sans-serif;
}

body, html {
	margin: 0;
	padding: 0;
	font-family: 'Segoe UI', 'Segoe UI Emoji', var(--f-fallback);
	font-size: 1.8vw;
}

.fallbackFont {
	font-family: NotoEmoji, 'Segoe UI', 'Segoe UI Emoji', var(--f-fallback);
}

.textStyle {
	font-family: 'Segoe UI', 'Segoe UI Symbol', var(--f-fallback);
}

* {
	user-select: none;
	-ms-user-select: none;
}

input {
	font-family: 'Segoe UI', 'Segoe UI Emoji', 'Cambria Math', Tahoma, Geneva, Verdana, sans-serif;
}

@font-face {
	font-family: NotoEmoji;
	src: url("../fonts/NotoColorEmoji-Regular.ttf");
}

@font-face {
	/*
	 * Adobe Blank is a special font that maps all unicode codepoints to non-spacing non-marking glyphs.
	 * The can be used to determine whether a character is supported by the previous fonts in a font stack.
	 * See https://github.com/adobe-fonts/adobe-blank.
	 */
	font-family: AdobeBlank;
	src: url("../fonts/AdobeBlank.otf");
}

main{
	display: flex;
	flex-direction: column;
	cursor: default;
}

main > section{
	flex: 1;
	overflow: auto;
}

.keyboard{
	display: grid;
	box-sizing: border-box;
	grid-template-columns: repeat(13, 1fr) max-content;
	grid-template-rows: repeat(4, 1fr);
	position: absolute;
	top: 0;
	left: 0;
	height: 100vh;
	width: 100vw;
	padding: var(--s-gap);
}

.keyboard input[type="search"] {
	grid-column: 1 / 15;
	font-size: 4vw;
}

.key{
	display: flex;
	list-style: none;
	padding: .3vw;
	overflow: hidden;
	position: relative;
	align-items: center;
	transition: background ease .05s;
	margin: var(--xs-gap);
	box-sizing: border-box;
}

.key[data-keycode="41"],
.key[data-keycode="15"],
.key[data-keycode="58"],
.key[data-keycode="42"] {
	grid-column: span 1;
}

.keyboard.ortholinear.iso-layout .key[data-keycode="42"] {display: none;}
.keyboard.ortholinear.iso-layout .key[data-keycode="2003"] {grid-column: span 2;}

.key[data-keycode="2000"], .key[data-keycode="2001"], .key[data-keycode="2002"], .key[data-keycode="2003"] {
	padding: 0;
	margin: 0;
	grid-column: span 1;
}

.keyboard.staggered {
	grid-template-columns: 1fr .25fr .25fr .25fr repeat(48, .25fr) repeat(6, max-content);
}

.keyboard.staggered .key {
	grid-column: span 4;
}

.keyboard.staggered .key[data-keycode="2000"] {grid-column: span 8;}
.keyboard.staggered .key[data-keycode="2001"] {grid-column: span 6;}
.keyboard.staggered .key[data-keycode="2002"] {grid-column: span 5;}
.keyboard.staggered .key[data-keycode="2003"] {grid-column: span 7;}
.keyboard.staggered .key[data-keycode="41"] {grid-column: span 1;}
.keyboard.staggered .key[data-keycode="15"] {grid-column: span 3;}
.keyboard.staggered .key[data-keycode="58"] {grid-column: span 4;}
.keyboard.staggered .key[data-keycode="42"] {grid-column: span 2;}

.keyboard.staggered.ansi-layout .key[data-keycode="2003"] {grid-column: span 3;}
.keyboard.staggered.ansi-layout .key[data-keycode="42"] {grid-column: span 6;}


.key .symbol{
	font-size: 3.6vw;
	text-align: center;
	flex: 1;
	transition: ease .1s;
	white-space: pre;
	text-shadow: var(--c-shadow) 0 0 .1em, var(--c-shadow) 0 0 .1em, var(--c-shadow) 0 0 .1em, var(--c-shadow) 0 0 .1em;
}
.key.char .symbol.s-space{
	font-size: 1.2vw;
	font-variant: small-caps;
	font-weight: bold;
	max-width: 100%;
	transform: none;
	hyphens: auto;
	word-wrap: break-word;
	white-space: normal;
}
.key .symbol img{
	height: 3.6vw;
}

.key .keyname{
	position: absolute;
	top: .2vw;
	left: .2vw;
	font-variant: small-caps;
	line-height: 1em;
	transition: ease .05s;
}

.key .name{
	font-size: 1.4vw;
	line-height: 1.2vw;
	text-align: right;
	position: absolute;
	bottom: .2vw;
	right: .2vw;
	left: .2vw;
	font-variant: small-caps;
	transition: ease .05s;
}

.key.char .name{
	display: none;
}

.key.char .symbol{
	transform: scale(1.2);
}

.key:hover .name{
	opacity: .8;
}

.key:not(.label):hover .symbol{
	transform: translateY(-4px) scale(1.8) rotate(0deg);
}

.key:not(.label):active .symbol{
	transform: translateY(-2px) scale(1.4) rotate(7deg);
}

.key.char .keypress {
	transform: scale(1) rotate(7deg);
}

.key:not(.lu) .uname{
	display: none;
}

.key .uname{
	position: absolute;
	bottom: .2vw;
	right: .2vw;
	line-height: 1em;
	transition: ease .05s;
}

.key.label {
	background-color: inherit;
	overflow: visible;
	min-width: 0;
	z-index: 10;
}

div.sprite {
	margin: 0 auto;
	height: 3.6vw;
	width: 3.6vw;
	position: relative;
	top: .3vw;
}
